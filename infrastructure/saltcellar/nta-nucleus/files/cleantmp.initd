#!/bin/bash
# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2015, Numenta, Inc.  Unless you have purchased from
# Numenta, Inc. a separate commercial license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero Public License for more details.
#
# You should have received a copy of the GNU Affero Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
# ----------------------------------------------------------------------
# chkconfig: 2345 1 1
# description: Clean up /tmp during boot
# processname: cleantmp
#
# This script cleans up /tmp during boot

export PATH=:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
TMP_CLEANER=/usr/sbin/tmpwatch
TIMELIMIT='0d'

# Source function library.
. /etc/rc.d/init.d/functions

check_for_tmpwatch() {
  if [ ! -x ${TMP_CLEANER} ]; then
    yum install -y tmpwatch
  fi
}

start() {
  check_for_tmpwatch
  # Nuke grok flag files explicitly
  rm -f /tmp/gs-*
  rm -f /tmp/grok-*
  #
  flags=-umc
  ${TMP_CLEANER} "$flags" -x /tmp/.X11-unix \
    -x /tmp/.XIM-unix \
    -x /tmp/.font-unix \
    -x /tmp/.ICE-unix \
    -x /tmp/.Test-unix \
    -x /tmp/enable_support_access \
    -X '/tmp/hsperfdata_*' ${TIMELIMIT} /tmp
}

stop() {
  # We don't start a long running daemon, so stop isn't an applicable option.
  # Init expects to have one, though.
  echo "We don't start a long running daemon, so stop isn't an applicable option."
}

restart() {
  start
}

# See how we were called.
case "${1}" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  *)
    echo $"Usage: ${0} {start|stop}"
    exit 1
esac

exit $?
