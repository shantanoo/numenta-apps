#!/bin/bash
# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2015, Numenta, Inc.  Unless you have purchased from
# Numenta, Inc. a separate commercial license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero Public License for more details.
#
# You should have received a copy of the GNU Affero Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
# ----------------------------------------------------------------------
# chkconfig: 2345 30 30
# processname: saltsolo
# description: Update salt's solo formulas, then run during boot. This \
# ensures we'll bring instances up to date immediately.

export PATH=/opt/numenta/anaconda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/sbin:/usr/bin:/bin

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
[ -r /etc/sysconfig/network ] && . /etc/sysconfig/network

# Check that networking is up.
[ "${NETWORKING}" = "no" ] && exit 1

die() { status="${1}"; shift; echo "FATAL: $*"; exit "${status}"; }

start() {
  mkdir -p /etc/numenta

  # Force machine to update the yum databases since we don't know how long
  # it has been since this AMI was baked.
  logger -t saltsolo-boot "Cleaning yum caches"
  yum clean all

  # Do a salt run.
  salt-cronjob
}

stop() {
  echo "Saltsolo is a dummy init script that just runs salt and exits. It doesn't start any services, so there is no stop."
}

restart() {
  start
}

# See how we were called. Init scripts are expected to have start,
# stop & restart options, so we look for them here instead of erroring.
case "${1}" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  *)
    echo $"Usage: ${0} {start|stop|restart}"
    exit 1
esac

exit $?
